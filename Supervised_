
# -*- coding: utf-8 -*-
"""diabetics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cpaIKe2Mo_cQo09613qbbHohP31x60mj
"""

from google.colab import drive
drive.mount("/content/drive/")

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

path="/content/drive/MyDrive/Colab Notebooks/dd.csv"
data=pd.read_csv(path)
data.describe

data.head()

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

X = data.drop("Outcome", axis=1)
y = data["Outcome"]

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train a Logistic Regression model
log_reg_model = LogisticRegression(random_state=42, max_iter=1000)
log_reg_model.fit(X_train, y_train)

# Predictions
y_pred_log_reg = log_reg_model.predict(X_test)

# Evaluate Logistic Regression
print("Logistic Regression Classifier:")
print("Accuracy:", accuracy_score(y_test, y_pred_log_reg))
print("Classification Report:\n", classification_report(y_test, y_pred_log_reg))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred_log_reg))

